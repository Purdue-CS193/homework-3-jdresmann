Q1: What are the 3 commands to transfer something from your local codebase to GitHub?
Add, commit, and push.

Q2: What does 'git clone' do? 
Git clone clones the target repository.

Q3: What does 'git status' do?
Git status informs you of what state your repository is currently in. It tells you what branch you are working in, if the files in your local respository are the same as the ones in the 
repository stored on GitHub, and if there are any changes you have made that need to be committed.
Q4: What does "Your branch is up to date with 'origin/master'" tell you?
It tells you that your files in your local repository are in the same state as the files stored remotely on the GitHub repository right now.

Q5: You’ve made a change to a file in GitHub, the one on the browser, and now you run 'git status' on the terminal. It still says "Up to Date" despite the change. What command do you need to enter first?
Git fetch.

Q6: You’ve just ran the 'rm' command and deleted an important file. All your code is deleted, not including the local repository. You only ran 'git add' and 'git commit' before the rogue command. Is your code saved?
Yes, as long as you ran git commit your code should be saved.

Q7: Your computer crashes and all your code is deleted, including the local repository. You only ran 'git add' and 'git commit'. Is your code saved?
No, because if the repository is deleted locally the only way to reobtain it would to be to clone it, but since no changes were pushed everything is gone.
